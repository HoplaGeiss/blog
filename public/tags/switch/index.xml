<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Switch on Gabriel Muller - JavaScript and Angular articles</title>
    <link>http://www.muller.tech/tags/switch/</link>
    <description>Recent content in Switch on Gabriel Muller - JavaScript and Angular articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 26 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.muller.tech/tags/switch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Angular 4 - Switch button</title>
      <link>http://www.muller.tech/post/2017/07/26/angular4-switch-button/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.muller.tech/post/2017/07/26/angular4-switch-button/</guid>
      <description>Ever wondered how to create a switch button in angular4 without using css frameworks? Here we go..
Let&amp;rsquo;s take a look at the component first.
// app.component.ts import { Component } from &amp;#39;@angular/core&amp;#39;; @Component({ selector: &amp;#39;app-root&amp;#39;, template: ` &amp;lt;div class=&amp;quot;switch&amp;quot;&amp;gt; &amp;lt;input id=&amp;#39;switch-input&amp;#39; type=&amp;#39;checkbox&amp;#39; [checked]=&amp;#39;switchActive&amp;#39; (click)=&amp;#39;toggle()&amp;#39;&amp;gt; &amp;lt;label for=&amp;#39;switch-input&amp;#39;&amp;gt;&amp;lt;/label&amp;gt; &amp;lt;/div&amp;gt; ` }) export class AppComponent { switchActive = false toggle = () =&amp;gt; { if (this.switchActive) { // Do something } else { // Do something else } this.</description>
    </item>
    
  </channel>
</rss>